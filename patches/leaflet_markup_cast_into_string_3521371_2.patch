diff --git a/modules/leaflet_views/src/Plugin/views/style/LeafletMap.php b/modules/leaflet_views/src/Plugin/views/style/LeafletMap.php
index e03db43..75f014e 100644
--- a/modules/leaflet_views/src/Plugin/views/style/LeafletMap.php
+++ b/modules/leaflet_views/src/Plugin/views/style/LeafletMap.php
@@ -1442,7 +1442,7 @@ class LeafletMap extends StylePluginBase implements ContainerFactoryPluginInterf
       // Decode every entity because JS will encode them again,
       // and we don't want double encoding.
       $feature['tooltip']['value'] = array_key_exists($this->options['leaflet_tooltip']['value'], $this->rendered_fields[$result->index]) ?
-        Html::decodeEntities($this->rendered_fields[$result->index][$this->options['leaflet_tooltip']['value']]) : '';
+        Html::decodeEntities((string) $this->rendered_fields[$result->index][$this->options['leaflet_tooltip']['value']]) : '';
 
       // Associate dynamic tooltip options (token based).
       if (!empty($this->options['leaflet_tooltip']['options'])) {
@@ -1458,7 +1458,7 @@ class LeafletMap extends StylePluginBase implements ContainerFactoryPluginInterf
       // Decode every entity because JS will encode them again,
       // and we don't want double encoding.
       $feature['title'] = !empty($this->options['name_field']) ?
-        Html::decodeEntities(($this->rendered_fields[$result->index][$this->options['name_field']])) : '';
+        Html::decodeEntities((string) $this->rendered_fields[$result->index][$this->options['name_field']]) : '';
     }
   }
 
diff --git a/src/Plugin/Field/FieldFormatter/LeafletDefaultFormatter.php b/src/Plugin/Field/FieldFormatter/LeafletDefaultFormatter.php
index ea63d47..142dd74 100644
--- a/src/Plugin/Field/FieldFormatter/LeafletDefaultFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/LeafletDefaultFormatter.php
@@ -333,7 +333,7 @@ class LeafletDefaultFormatter extends FormatterBase implements ContainerFactoryP
         $feature['tooltip'] = $settings['leaflet_tooltip'];
         // Decode any entities because JS will encode them again,
         // and we don't want double encoding.
-        $feature['tooltip']['value'] = $this->tokenResolvedContent($entity, $settings['leaflet_tooltip']['value'], $tokens, $results);
+        $feature['tooltip']['value'] = $this->tokenResolvedContent($entity, (string) $settings['leaflet_tooltip']['value'], $tokens, $results);
 
         // Associate dynamic tooltip options (token based).
         if (!empty($settings['leaflet_tooltip']['options'])) {
